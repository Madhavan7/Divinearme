# Generated by Django 4.2.4 on 2023-10-20 22:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_accepted', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=20)),
                ('invite_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(default=False)),
                ('biography', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='model', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__username'],
            },
        ),
        migrations.CreateModel(
            name='temple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('private', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('placeID', models.CharField(max_length=200, unique=True)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=200)),
                ('temple_location', models.CharField(max_length=200)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('admins', models.ManyToManyField(related_name='admins', to='search.usermodel')),
                ('requests_to_join', models.ManyToManyField(blank=True, related_name='temple_requests', to='search.usermodel')),
                ('temple_members', models.ManyToManyField(blank=True, related_name='temples', to='search.usermodel')),
            ],
            options={
                'ordering': ['date_joined'],
            },
        ),
        migrations.CreateModel(
            name='post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('title', models.CharField(default='new post', max_length=200)),
                ('text', models.TextField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poster', to='search.usermodel')),
            ],
        ),
        migrations.CreateModel(
            name='membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('religious_establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='search.temple')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('start_date_time', models.DateTimeField(null=True)),
                ('end_date_time', models.DateTimeField(null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('event_location', models.CharField(max_length=200)),
                ('event_members', models.ManyToManyField(blank=True, related_name='events', to='search.usermodel')),
                ('religious_establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='search.temple')),
                ('requests_to_join', models.ManyToManyField(blank=True, related_name='requested_events', to='search.usermodel')),
            ],
            options={
                'ordering': ['start_date_time'],
            },
        ),
        migrations.CreateModel(
            name='comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('text', models.TextField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commenter', to='search.usermodel')),
                ('parent_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='search.post')),
            ],
        ),
        migrations.CreateModel(
            name='TemplePost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='search.post')),
                ('templeID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='search.temple')),
            ],
            bases=('search.post',),
        ),
        migrations.CreateModel(
            name='TempleInvitation',
            fields=[
                ('invitation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='search.invitation')),
                ('associated_temple', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invited_users_invitations', to='search.temple')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temple_invitations', to='search.usermodel')),
            ],
            bases=('search.invitation',),
        ),
        migrations.AddField(
            model_name='temple',
            name='invited_users',
            field=models.ManyToManyField(through='search.TempleInvitation', to='search.usermodel'),
        ),
        migrations.CreateModel(
            name='EventPost',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='search.post')),
                ('eventID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='search.event')),
            ],
            bases=('search.post',),
        ),
        migrations.CreateModel(
            name='EventInvitation',
            fields=[
                ('invitation_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='search.invitation')),
                ('associated_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invited_users_invitations', to='search.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_invitations', to='search.usermodel')),
            ],
            bases=('search.invitation',),
        ),
        migrations.AddField(
            model_name='event',
            name='invited_users',
            field=models.ManyToManyField(through='search.EventInvitation', to='search.usermodel'),
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('comment_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='search.comment')),
                ('parent_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reply', to='search.comment')),
            ],
            bases=('search.comment',),
        ),
    ]
